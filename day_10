1.766. Toeplitz Matrix:
Given an m x n matrix, return true if the matrix is Toeplitz. Otherwise, return false.
A matrix is Toeplitz if every diagonal from top-left to bottom-right has the same elements.
Input: matrix = [[1,2,3,4],[5,1,2,3],[9,5,1,2]]
Output: true
Explanation:
In the above grid, the diagonals are:
"[9]", "[5, 5]", "[1, 1, 1]", "[2, 2, 2]", "[3, 3]", "[4]".
In each diagonal all elements are the same, so the answer is True.
code:
  class Solution:
    def isToeplitzMatrix(self, matrix: List[List[int]]) -> bool:
        for i in range(1,len(matrix)):
            for j in range(1,len(matrix[0])): # started the loop from 1 because the element are present at 1 index 
                if matrix[i][j]!=matrix[i-1][j-1]: 
                    return False
        return True 
2.1572. Matrix Diagonal Sum
Given a square matrix mat, return the sum of the matrix diagonals.
Only include the sum of all the elements on the primary diagonal and all the elements on the secondary diagonal that are not part of the primary diagonal.
Input: mat = [[1,2,3],
              [4,5,6],
              [7,8,9]]
Output: 25
Explanation: Diagonals sum: 1 + 5 + 9 + 3 + 7 = 25
Notice that element mat[1][1] = 5 is counted only once.
code:
class Solution:
    def diagonalSum(self, mat: List[List[int]]) -> int:
        primaray_sum,secondary_sum,middle_element=0,0,0
        for i in range(len(mat)):
            for j in range(len(mat[0])):
                if i==j: # this is for  primary diagonal element 
                    primaray_sum+=mat[i][j] 
                if i+j==len(mat)-1: # this is for secondary diagonal element 
                     secondary_sum+=mat[i][j]
                if len(mat) % 2 == 1 and i == j == (len(mat) - 1) // 2: #find the middle element for even as well as odd matrix and then subtract the middle element 
                     middle_element = mat[i][j]      
        return primaray_sum+secondary_sum-middle_element

 
 
