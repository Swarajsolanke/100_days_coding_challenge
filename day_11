1. 2319. Check if Matrix Is X-Matrix
A square matrix is said to be an X-Matrix if both of the following conditions hold:
  All the elements in the diagonals of the matrix are non-zero.
  All other elements are 0.Given a 2D integer array grid of size n x n representing a square matrix,
  return true if grid is an X-Matrix. Otherwise, return false.
Input: grid = [[2,0,0,1],[0,3,1,0],[0,5,2,0],[4,0,0,2]]
Output: true
Explanation: Refer to the diagram above. 
An X-Matrix should have the green elements (diagonals) be non-zero and the red elements be 0.
Thus, grid is an X-Matrix.
code:
class Solution:
    def checkXMatrix(self, grid: List[List[int]]) -> bool:
        for i in range(len(grid)):
            for j in range(len(grid[0])):
                if i==j or i+j==len(grid)-1:
                    if grid[i][j]==0:
                        return False 
                if((i!=j and i+j!=len(grid)-1) and grid[i][j]!=0):
                    return 0       
        return True 
2.566. Reshape the Matrix
You are given an m x n matrix mat and two integers r and c representing the number of rows and the number of columns of the wanted reshaped matrix.The reshaped matrix should be filled with all the elements of the original matrix in the same row-traversing order as they were.
If the reshape operation with given parameters is possible and legal, output the new reshaped matrix; Otherwise, output the original matrix.

Input: mat = [[1,2],[3,4]], r = 1, c = 4
Output: [[1,2,3,4]]

  code:
    class Solution:
    def matrixReshape(self, mat: List[List[int]], r: int, c: int) -> List[List[int]]:
        temp=[]
        result=[]
        for i in mat:
            for j in i:
                temp.append(j)
        if r*c!=len(temp):
            return mat
        else:
            for i in range(r):
                result.append(temp[i*c:i*c+c])
        return result
