# 1.Nth Fibonacci Number
Given a positive integer n, find the nth fibonacci number. Since the answer can be very large, return the answer modulo 1000000007.
Note: for the reference of this question take first fibonacci number to be 1.
Example 1:

Input: 
n = 2
Output: 
1 
Explanation: 
1 is the 2nd number of fibonacci series.
Example 2:
Input: 
n = 5
Output: 
5
Explanation: 
5 is the 5th number of fibonacci series.
code:

class Solution:
    def nthFibonacci(self, n : int) -> int:
        modulo =1000000007 #defined the huge value 
        a=0
        b=1
        for i in range(1,n):
            c=(a+b)%modulo #here i am dividing the with module to get the previous number 
            a=b
            b=c
        return c
# 2.Rotate Array:
Given an unsorted array arr[] of size N. Rotate the array to the left (counter-clockwise direction) by D steps, where D is a positive integer. 
Example 1:
Input:
N = 5, D = 2
arr[] = {1,2,3,4,5}
Output: 3 4 5 1 2
Explanation: 1 2 3 4 5  when rotated
by 2 elements, it becomes 3 4 5 1 2.
Example 2:
Input:
N = 10, D = 3
arr[] = {2,4,6,8,10,12,14,16,18,20}
Output: 8 10 12 14 16 18 20 2 4 6
Explanation: 2 4 6 8 10 12 14 16 18 20 
when rotated by 3 elements, it becomes 
8 10 12 14 16 18 20 2 4 6.
code:
class Solution:
   
    def rotateArr(self,A,D,N):
        D=D%N # here i have calculated the reminder 
        A[:]=A[D:]+A[:D]  #concatenate the from D: to :D 
        return A
            
        #Your code here
